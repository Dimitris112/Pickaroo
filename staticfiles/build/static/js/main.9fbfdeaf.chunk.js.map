{"version":3,"sources":["App.module.css","api/axiosDefaults.js","contexts/AuthContext.js","App.js","reportWebVitals.js","contexts/FavoritesContext.js","contexts/ListingContext.js","contexts/NotificationsContext.js","contexts/ReviewsContext.js","index.js"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","AuthContext","createContext","SetAuthContext","useAuth","useContext","useSetAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","requestInterceptor","interceptors","request","use","async","shouldRefreshToken","err","push","removeTokenTimestamp","config","Promise","reject","responseInterceptor","response","_err$response","status","eject","data","get","console","error","fetchCurrentUser","_jsx","Provider","value","HomePage","React","lazy","SignUpForm","SignInForm","ReviewsPage","ReviewCreateForm","ReportsPage","NotFound","Loader","className","styles","App","_jsxs","NavBar","Container","Main","Suspense","fallback","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FavoritesContext","SetFavoritesContext","FavoritesProvider","favorites","setFavorites","handleMount","addFavorite","concat","itemId","prevFavorites","removeFavorite","delete","filter","fav","id","ListingsContext","SetListingsContext","ListingsProvider","listings","setListings","useMemo","_error$response","addListing","newListing","prevListings","removeListing","listingId","listing","NotificationsContext","SetNotificationsContext","NotificationsProvider","notifications","setNotifications","markAsRead","patch","notificationId","isRead","prevNotifications","map","notification","_objectSpread","deleteNotification","ReviewsContext","SetReviewsContext","ReviewsProvider","reviews","setReviews","addReview","reviewData","prevReviews","deleteReview","reviewId","review","reportReview","alert","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.9fbfdeaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Main\":\"App_Main__HQkvd\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"Image\":\"App_Image__3UPXw\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\";\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\"; // images and more\naxios.defaults.withCredentials = true; // required for cookies\n\nexport const axiosReq = axios.create(); // requests\nexport const axiosRes = axios.create(); // responses\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const AuthContext = createContext();\nexport const SetAuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\nexport const useSetAuth = () => useContext(SetAuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const fetchCurrentUser = async () => {\n    try {\n      const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(\"Failed to fetch current user:\", err);\n    }\n  };\n\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser(null);\n            history.push(\"/signin\");\n            removeTokenTimestamp();\n            throw err;\n          }\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n            return axios(err.config); // Retry the original request\n          } catch (err) {\n            setCurrentUser(null);\n            history.push(\"/signin\");\n            removeTokenTimestamp();\n          }\n        }\n        return Promise.reject(err);\n      }\n    );\n\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={currentUser}>\n      <SetAuthContext.Provider value={setCurrentUser}>\n        {children}\n      </SetAuthContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React, { Suspense } from \"react\";\nimport styles from \"./App.module.css\";\nimport NavBar from \"./components/NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./api/axiosDefaults\";\n\nconst HomePage = React.lazy(() => import(\"./pages/homepage/HomePage\"));\nconst SignUpForm = React.lazy(() => import(\"./pages/auth/SignupPage\"));\nconst SignInForm = React.lazy(() => import(\"./pages/auth/LoginPage\"));\nconst ReviewsPage = React.lazy(() => import(\"./pages/reviews/ReviewsPage\"));\nconst ReviewCreateForm = React.lazy(() =>\n  import(\"./pages/reviews/ReviewCreateForm\")\n);\nconst ReportsPage = React.lazy(() => import(\"./pages/reports/ReportsPage\"));\nconst NotFound = React.lazy(() => import(\"./components/NotFound\"));\n\nconst Loader = () => <div className={styles.Loader}>Loading...</div>;\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <Container className={styles.Main}>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/signin\" component={SignInForm} />\n            <Route exact path=\"/signup\" component={SignUpForm} />\n            <Route exact path=\"/reviews\" component={ReviewsPage} />\n            <Route\n              exact\n              path=\"/reviews/create\"\n              component={ReviewCreateForm}\n            />\n            <Route exact path=\"/reports\" component={ReportsPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const FavoritesContext = createContext();\nexport const SetFavoritesContext = createContext();\n\nexport const useFavorites = () => useContext(FavoritesContext);\nexport const useSetFavorites = () => useContext(SetFavoritesContext);\n\nexport const FavoritesProvider = ({ children }) => {\n  const [favorites, setFavorites] = useState([]);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/favorites/\");\n      setFavorites(data);\n    } catch (err) {\n      console.error(\"Error fetching favorites:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Add favorite\n  const addFavorite = async (itemId) => {\n    try {\n      const { data } = await axiosReq.post(`/favorites/${itemId}/`);\n      setFavorites((prevFavorites) => [...prevFavorites, data]);\n    } catch (err) {\n      console.error(\"Error adding favorite:\", err);\n    }\n  };\n\n  // Remove favorite\n  const removeFavorite = async (itemId) => {\n    try {\n      await axiosReq.delete(`/favorites/${itemId}/`);\n      setFavorites((prevFavorites) =>\n        prevFavorites.filter((fav) => fav.id !== itemId)\n      );\n    } catch (err) {\n      console.error(\"Error removing favorite:\", err);\n    }\n  };\n\n  return (\n    <FavoritesContext.Provider value={favorites}>\n      <SetFavoritesContext.Provider value={{ addFavorite, removeFavorite }}>\n        {children}\n      </SetFavoritesContext.Provider>\n    </FavoritesContext.Provider>\n  );\n};\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const ListingsContext = createContext();\nexport const SetListingsContext = createContext();\n\nexport const useListings = () => useContext(ListingsContext);\nexport const useSetListings = () => useContext(SetListingsContext);\n\nexport const ListingsProvider = ({ children }) => {\n  const [listings, setListings] = useState([]);\n  const history = useHistory();\n\n  // Fetch listings on mount\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/listings/\");\n      setListings(data);\n    } catch (err) {\n      console.error(\"Error fetching listings:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Add a new listing\n  const addListing = async (newListing) => {\n    try {\n      const { data } = await axiosReq.post(\"/listings/\", newListing);\n      setListings((prevListings) => [...prevListings, data]);\n    } catch (err) {\n      console.error(\"Error adding listing:\", err);\n    }\n  };\n\n  // Remove a listing\n  const removeListing = async (listingId) => {\n    try {\n      await axiosReq.delete(`/listings/${listingId}/`);\n      setListings((prevListings) =>\n        prevListings.filter((listing) => listing.id !== listingId)\n      );\n    } catch (err) {\n      console.error(\"Error removing listing:\", err);\n    }\n  };\n\n  useMemo(() => {\n    axiosReq.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n  }, [history]);\n\n  return (\n    <ListingsContext.Provider value={listings}>\n      <SetListingsContext.Provider value={{ addListing, removeListing }}>\n        {children}\n      </SetListingsContext.Provider>\n    </ListingsContext.Provider>\n  );\n};\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const NotificationsContext = createContext();\nexport const SetNotificationsContext = createContext();\n\nexport const useNotifications = () => useContext(NotificationsContext);\nexport const useSetNotifications = () => useContext(SetNotificationsContext);\n\nexport const NotificationsProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n  const history = useHistory();\n\n  // Fetch notifications on mount\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/notifications/\");\n      setNotifications(data);\n    } catch (err) {\n      console.error(\"Error fetching notifications:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Mark a notification as read\n  const markAsRead = async (notificationId) => {\n    try {\n      await axiosReq.patch(`/notifications/${notificationId}/`, {\n        isRead: true,\n      });\n      setNotifications((prevNotifications) =>\n        prevNotifications.map((notification) =>\n          notification.id === notificationId\n            ? { ...notification, isRead: true }\n            : notification\n        )\n      );\n    } catch (err) {\n      console.error(\"Error marking notification as read:\", err);\n    }\n  };\n\n  // Delete a notification\n  const deleteNotification = async (notificationId) => {\n    try {\n      await axiosReq.delete(`/notifications/${notificationId}/`);\n      setNotifications((prevNotifications) =>\n        prevNotifications.filter(\n          (notification) => notification.id !== notificationId\n        )\n      );\n    } catch (err) {\n      console.error(\"Error deleting notification:\", err);\n    }\n  };\n\n  useMemo(() => {\n    axiosReq.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n  }, [history]);\n\n  return (\n    <NotificationsContext.Provider value={notifications}>\n      <SetNotificationsContext.Provider\n        value={{ markAsRead, deleteNotification }}\n      >\n        {children}\n      </SetNotificationsContext.Provider>\n    </NotificationsContext.Provider>\n  );\n};\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const ReviewsContext = createContext();\nexport const SetReviewsContext = createContext();\n\nexport const useReviews = () => useContext(ReviewsContext);\nexport const useSetReviews = () => useContext(SetReviewsContext);\n\nexport const ReviewsProvider = ({ children }) => {\n  const [reviews, setReviews] = useState([]);\n  const history = useHistory();\n\n  // Fetch reviews on mount\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/reviews/\");\n      setReviews(data);\n    } catch (err) {\n      console.error(\"Error fetching reviews:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Add review\n  const addReview = async (reviewData) => {\n    try {\n      const { data } = await axiosReq.post(\"/reviews/\", reviewData);\n      setReviews((prevReviews) => [...prevReviews, data]);\n    } catch (err) {\n      console.error(\"Error adding review:\", err);\n    }\n  };\n\n  // Delete review\n  const deleteReview = async (reviewId) => {\n    try {\n      await axiosReq.delete(`/reviews/${reviewId}/`);\n      setReviews((prevReviews) =>\n        prevReviews.filter((review) => review.id !== reviewId)\n      );\n    } catch (err) {\n      console.error(\"Error deleting review:\", err);\n    }\n  };\n\n  // Report review\n  const reportReview = async (reviewId) => {\n    try {\n      await axiosReq.post(`/reviews/${reviewId}/report/`);\n      alert(\"Review reported\");\n    } catch (err) {\n      console.error(\"Error reporting review:\", err);\n    }\n  };\n\n  useMemo(() => {\n    axiosReq.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n  }, [history]);\n\n  return (\n    <ReviewsContext.Provider value={reviews}>\n      <SetReviewsContext.Provider value={{ addReview, deleteReview, reportReview }}>\n        {children}\n      </SetReviewsContext.Provider>\n    </ReviewsContext.Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AuthProvider from \"./contexts/AuthContext\";\nimport { FavoritesProvider } from \"./contexts/FavoritesContext\";\nimport { ListingsProvider } from \"./contexts/ListingContext\";\nimport { NotificationsProvider } from \"./contexts/NotificationsContext\";\nimport { ReviewsProvider } from \"./contexts/ReviewsContext\";\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <FavoritesProvider>\n        <ListingsProvider>\n          <NotificationsProvider>\n            <ReviewsProvider>\n              <App />\n            </ReviewsProvider>\n          </NotificationsProvider>\n        </ListingsProvider>\n      </FavoritesProvider>\n    </AuthProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}