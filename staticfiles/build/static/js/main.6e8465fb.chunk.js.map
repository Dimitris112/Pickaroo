{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","api/axiosDefaults.js","contexts/AuthContext.js","contexts/FavoritesContext.js","contexts/ListingContext.js","contexts/NotificationsContext.js","index.js"],"names":["App","_jsx","className","children","_jsxs","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","AuthContext","createContext","SetAuthContext","AuthProvider","currentUser","setCurrentUser","useState","history","useHistory","useEffect","requestInterceptor","interceptors","request","use","async","shouldRefreshToken","err","push","removeTokenTimestamp","config","Promise","reject","responseInterceptor","response","_err$response","status","eject","data","get","console","error","fetchCurrentUser","Provider","value","FavoritesContext","SetFavoritesContext","FavoritesProvider","favorites","setFavorites","handleMount","addFavorite","concat","itemId","prevFavorites","removeFavorite","delete","filter","fav","id","ListingsContext","SetListingsContext","ListingsProvider","listings","setListings","useMemo","_error$response","addListing","newListing","prevListings","removeListing","listingId","listing","NotificationsContext","SetNotificationsContext","NotificationsProvider","notifications","setNotifications","markAsRead","patch","notificationId","isRead","prevNotifications","map","notification","_objectSpread","deleteNotification","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.6e8465fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\";\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\"; // images and more\naxios.defaults.withCredentials = true; // required for cookies\n\nexport const axiosReq = axios.create(); // requests\nexport const axiosRes = axios.create(); // responses\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom\";\nimport { removeTokenTimestamp, shouldRefreshToken } from \"../utils/utils\";\n\nexport const AuthContext = createContext();\nexport const SetAuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\nexport const useSetAuth = () => useContext(SetAuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const fetchCurrentUser = async () => {\n    try {\n      const { data } = await axiosRes.get(\"dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(\"Failed to fetch current user:\", err);\n    }\n  };\n\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n          } catch (err) {\n            setCurrentUser(null);\n            history.push(\"/signin\");\n            removeTokenTimestamp();\n            throw err;\n          }\n        }\n        return config;\n      },\n      (err) => Promise.reject(err)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(\"/dj-rest-auth/token/refresh/\");\n            return axios(err.config); // Retry the original request\n          } catch (err) {\n            setCurrentUser(null);\n            history.push(\"/signin\");\n            removeTokenTimestamp();\n          }\n        }\n        return Promise.reject(err);\n      }\n    );\n\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={currentUser}>\n      <SetAuthContext.Provider value={setCurrentUser}>\n        {children}\n      </SetAuthContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const FavoritesContext = createContext();\nexport const SetFavoritesContext = createContext();\n\nexport const useFavorites = () => useContext(FavoritesContext);\nexport const useSetFavorites = () => useContext(SetFavoritesContext);\n\nexport const FavoritesProvider = ({ children }) => {\n  const [favorites, setFavorites] = useState([]);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/favorites/\");\n      setFavorites(data);\n    } catch (err) {\n      console.error(\"Error fetching favorites:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Add favorite\n  const addFavorite = async (itemId) => {\n    try {\n      const { data } = await axiosReq.post(`/favorites/${itemId}/`);\n      setFavorites((prevFavorites) => [...prevFavorites, data]);\n    } catch (err) {\n      console.error(\"Error adding favorite:\", err);\n    }\n  };\n\n  // Remove favorite\n  const removeFavorite = async (itemId) => {\n    try {\n      await axiosReq.delete(`/favorites/${itemId}/`);\n      setFavorites((prevFavorites) =>\n        prevFavorites.filter((fav) => fav.id !== itemId)\n      );\n    } catch (err) {\n      console.error(\"Error removing favorite:\", err);\n    }\n  };\n\n  return (\n    <FavoritesContext.Provider value={favorites}>\n      <SetFavoritesContext.Provider value={{ addFavorite, removeFavorite }}>\n        {children}\n      </SetFavoritesContext.Provider>\n    </FavoritesContext.Provider>\n  );\n};\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const ListingsContext = createContext();\nexport const SetListingsContext = createContext();\n\nexport const useListings = () => useContext(ListingsContext);\nexport const useSetListings = () => useContext(SetListingsContext);\n\nexport const ListingsProvider = ({ children }) => {\n  const [listings, setListings] = useState([]);\n  const history = useHistory();\n\n  // Fetch listings on mount\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/listings/\");\n      setListings(data);\n    } catch (err) {\n      console.error(\"Error fetching listings:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Add a new listing\n  const addListing = async (newListing) => {\n    try {\n      const { data } = await axiosReq.post(\"/listings/\", newListing);\n      setListings((prevListings) => [...prevListings, data]);\n    } catch (err) {\n      console.error(\"Error adding listing:\", err);\n    }\n  };\n\n  // Remove a listing\n  const removeListing = async (listingId) => {\n    try {\n      await axiosReq.delete(`/listings/${listingId}/`);\n      setListings((prevListings) =>\n        prevListings.filter((listing) => listing.id !== listingId)\n      );\n    } catch (err) {\n      console.error(\"Error removing listing:\", err);\n    }\n  };\n\n  useMemo(() => {\n    axiosReq.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n  }, [history]);\n\n  return (\n    <ListingsContext.Provider value={listings}>\n      <SetListingsContext.Provider value={{ addListing, removeListing }}>\n        {children}\n      </SetListingsContext.Provider>\n    </ListingsContext.Provider>\n  );\n};\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router\";\n\nexport const NotificationsContext = createContext();\nexport const SetNotificationsContext = createContext();\n\nexport const useNotifications = () => useContext(NotificationsContext);\nexport const useSetNotifications = () => useContext(SetNotificationsContext);\n\nexport const NotificationsProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n  const history = useHistory();\n\n  // Fetch notifications on mount\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get(\"/notifications/\");\n      setNotifications(data);\n    } catch (err) {\n      console.error(\"Error fetching notifications:\", err);\n      history.push(\"/error\");\n    }\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  // Mark a notification as read\n  const markAsRead = async (notificationId) => {\n    try {\n      await axiosReq.patch(`/notifications/${notificationId}/`, {\n        isRead: true,\n      });\n      setNotifications((prevNotifications) =>\n        prevNotifications.map((notification) =>\n          notification.id === notificationId\n            ? { ...notification, isRead: true }\n            : notification\n        )\n      );\n    } catch (err) {\n      console.error(\"Error marking notification as read:\", err);\n    }\n  };\n\n  // Delete a notification\n  const deleteNotification = async (notificationId) => {\n    try {\n      await axiosReq.delete(`/notifications/${notificationId}/`);\n      setNotifications((prevNotifications) =>\n        prevNotifications.filter(\n          (notification) => notification.id !== notificationId\n        )\n      );\n    } catch (err) {\n      console.error(\"Error deleting notification:\", err);\n    }\n  };\n\n  useMemo(() => {\n    axiosReq.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n  }, [history]);\n\n  return (\n    <NotificationsContext.Provider value={notifications}>\n      <SetNotificationsContext.Provider\n        value={{ markAsRead, deleteNotification }}\n      >\n        {children}\n      </SetNotificationsContext.Provider>\n    </NotificationsContext.Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AuthProvider from \"./contexts/AuthContext\";\nimport { FavoritesProvider } from \"./contexts/FavoritesContext\";\nimport { ListingsProvider } from \"./contexts/ListingContext\";\nimport { NotificationsProvider } from \"./contexts/NotificationsContext\";\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <FavoritesProvider>\n        <ListingsProvider>\n          <NotificationsProvider>\n            <App />\n          </NotificationsProvider>\n        </ListingsProvider>\n      </FavoritesProvider>\n    </AuthProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}